// <auto-generated />
using Commander.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Commander.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Commander.Entities.Command", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommandLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Commands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommandLine = "git status",
                            HowTo = "View status of git repository",
                            Platform = "Git"
                        },
                        new
                        {
                            Id = 2,
                            CommandLine = "ls -a",
                            HowTo = "View all files in folder including hidden",
                            Platform = "Git"
                        },
                        new
                        {
                            Id = 3,
                            CommandLine = "git add .",
                            HowTo = "Stage all files in directory for commit",
                            Platform = "Git"
                        },
                        new
                        {
                            Id = 4,
                            CommandLine = "git diff",
                            HowTo = "View staged files for commit",
                            Platform = "Git"
                        },
                        new
                        {
                            Id = 5,
                            CommandLine = "git commit -m \"the message goes in here\" ",
                            HowTo = "Commit with message",
                            Platform = "Git"
                        },
                        new
                        {
                            Id = 6,
                            CommandLine = "git push",
                            HowTo = "Push to git",
                            Platform = "Git"
                        },
                        new
                        {
                            Id = 7,
                            CommandLine = "git reset --hard HEAD~1",
                            HowTo = "Remove last commit",
                            Platform = "Git"
                        },
                        new
                        {
                            Id = 8,
                            CommandLine = "add-migration \"name of migration goes in here\"",
                            HowTo = "Add migration",
                            Platform = "EF Core"
                        },
                        new
                        {
                            Id = 9,
                            CommandLine = "remove-migration",
                            HowTo = "Remove last migration",
                            Platform = "EF Core"
                        },
                        new
                        {
                            Id = 10,
                            CommandLine = "update-database -verbose",
                            HowTo = "Update Database",
                            Platform = "EF Core"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
